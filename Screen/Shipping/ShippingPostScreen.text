/*
 * File: ShippingPost.tsx
 * Project: my-app
 * File Created: Sunday, 5th February 2023 12:45:06 pm
 * Author: Kwonilgun(권일근) (kwonilgun@naver.com)
 * -----
 * Last Modified: Sunday, 5th February 2023 12:45:45 pm
 * Modified By: Kwonilgun(권일근) (kwonilgun@naver.com>)
 * -----
 * Copyright <<projectCreationYear>> - 2023 루트원 AI, 루트원 AI
 * 2023-02-05 : addressUpdat를 props를 이용해서 ShippingModify로 전달하고 다시 그리게 한다.
 *
 * 2023-02-07 : 로딩 창을 구현함. Zstack 이용함.
 */

import React, { useEffect, useRef, useState } from 'react';
import { Box, Center, HStack, Spinner, Text, VStack } from 'react-native';
import Postcode from '@actbase/react-daum-postcode';
import { Dimensions } from 'react-native';
import { asyncStoreData } from '../../../../Shared/Async/AsyncStorageFt';
import { LOG } from '../../../../Log/reactLogger';
import { LogoTitle } from '../../../../Navigators/LogoTitle';

const { height, width } = Dimensions.get('window');

interface AddressInfo {
  name: string;
  address2: string;
  phone: string;
  deliveryMethod: string;
  deliveryId: string;
}

interface Props {
  route: {
    params: {
      returnComponent: string;
      addressInfo: AddressInfo;
    };
  };
  navigation: any;
}

const ShippingPost: React.FC<Props> = (props) => {
  const returnComponent = useRef<string>();
  const addressInfo = useRef<AddressInfo>();

  returnComponent.current = props.route.params.returnComponent;
  addressInfo.current = props.route.params.addressInfo;

  const [loading, setLoading] = useState<boolean>(false);

  useEffect(() => {
    setLoading(true);
    startLoading();
  }, []);

  const startLoading = () => {
    setLoading(true);
    setTimeout(() => {
      setLoading(false);
    }, 100);
  };

  return (
    <>
      <Box>
        <LogoTitle
          title="루트원 마켓"
          backKey={true}
          navigation={props.navigation}
        />
      </Box>
      {loading ? (
        <VStack
          backgroundColor={'gray.100'}
          width={width}
          height={height * 0.8}
          justifyContent="center"
        >
          <Spinner size="large" color="emerald" />
          <Center>
            <Text>로딩중</Text>
          </Center>
        </VStack>
      ) : (
        <HStack
          width={width}
          height={height * 0.7}
          justifyContent="center"
          alignItems="center"
          marginTop={10}
        >
          <Postcode
            style={{ width: width * 0.8, height: height * 0.6 }}
            jsOptions={{ animation: false, hideMapBtn: true }}
            onSelected={(data: any) => {
              LOG.info(data.address);

              const deliveryProfile = {
                name: addressInfo.current?.name,
                address1: data.address,
                address2: addressInfo.current?.address2,
                phone: addressInfo.current?.phone,
                deliveryMethod: addressInfo.current?.deliveryMethod,
                deliveryId: addressInfo.current?.deliveryId,
                checkMark: false,
              };

              // Save the delivery info asynchronously
              asyncStoreData('deliveryInfo', deliveryProfile)
                .then(() => {
                  props.navigation.navigate(returnComponent.current || '');
                })
                .catch((e) => LOG.info(e));
            }}
          />
        </HStack>
      )}
    </>
  );
};

export default ShippingPost;
